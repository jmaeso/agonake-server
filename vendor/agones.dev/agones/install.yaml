# Copyright 2017 Google Inc. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Namespace
metadata:
  name: agones-system
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: gameservers.stable.agones.dev
spec:
  group: stable.agones.dev
  version: v1alpha1
  scope: Namespaced
  names:
    kind: GameServer
    plural: gameservers
    shortNames:
    - gs
    singular: gameserver
  validation:
    openAPIV3Schema:
      required:
      - spec
      properties:
        spec:
          required:
          - containerPort
          - template
          properties:
            template:
              type: object
              required:
              - spec
              properties:
                spec:
                  type: object
                  required:
                  - containers
                  properties:
                    containers:
                      type: array
                      items:
                        type: object
                        required:
                        - image
                        properties:
                          name:
                            type: string
                            minLength: 0
                            maxLength: 63
                            pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                          image:
                            type: string
                            minLength: 1
                      minItems: 1
            container:
              title: The container name running the gameserver
              description: if there is more than one container, specify which one is the game server
              type: string
              minLength: 0
              maxLength: 63
              pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
            portPolicy:
              title: the port policy that will be applied to the game server
              description: |
                  portPolicy has two options:
                  - "dynamic" (default) the system allocates a free hostPort for the gameserver, for game clients to connect to
                  - "static", user defines the hostPort that the game client will connect to. Then onus is on the user to ensure that the
                  port is available. When static is the policy specified, `hostPort` is required to be populated
              type: string
              enum:
              - dynamic
              - static
            protocol:
              title: Protocol being used. Defaults to UDP. TCP is the only other option
              type: string
              enum:
              - UDP
              - TCP
            containerPort:
              title: The port that is being opened on the game server process
              type: integer
              minimum: 0
              maximum: 65535
            hostPort:
              title: The port exposed on the host
              description: Only required when `portPolicy` is "static". Overwritten when portPolicy is "dynamic".
              type: integer
              minimum: 0
              maximum: 65535
            health:
              type: object
              title: Health checking for the running game server
              properties:
                disabled:
                  title: Disable health checking. defaults to false, but can be set to true
                  type: boolean
                initialDelaySeconds:
                  title: Number of seconds after the container has started before health check is initiated. Defaults to 5 seconds
                  type: integer
                  minimum: 0
                  maximum: 2147483648
                periodSeconds:
                  title: How long before the server is considered not healthy
                  type: integer
                  minimum: 0
                  maximum: 2147483648
                failureThreshold:
                  title: Minimum consecutive failures for the health probe to be considered failed after having succeeded.
                  type: integer
                  minimum: 1
                  maximum: 2147483648
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: agones-controller
  namespace: agones-system
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        stable.agones.dev/role: controller
    spec:
      serviceAccountName: agones-controller
      containers:
      - name: agones-controller
        image: gcr.io/agones-images/agones-controller:0.1
        env:
        # minimum port that can be exposed to GameServer traffic
        - name: MIN_PORT
          value: "7000"
        # maximum port that can be exposed to GameServer traffic
        - name: MAX_PORT
          value: "8000"
        # - name: SIDECAR # overwrite the GameServer sidecar image that is used
        #   value: gcr.io/agones-images/agones-sdk:0.1
        livenessProbe:
          httpGet:
            path: /live
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  name: agones-controller-service
  namespace: agones-system
spec:
  selector:
    stable.agones.dev/role: controller
  ports:
    - port: 443
      targetPort: 8081
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: agones-mutation-webhook
  namespace: agones-system
webhooks:
  - name: mutations.stable.agones.dev
    failurePolicy: Fail
    clientConfig:
      service:
        name: agones-controller-service
        namespace: agones-system
        path: /mutate
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVLVENDQXhHZ0F3SUJBZ0lKQU9KUDY0MTB3dkdTTUEwR0NTcUdTSWIzRFFFQkN3VUFNSUdxTVFzd0NRWUQKVlFRR0V3SlZVekVUTUJFR0ExVUVDQXdLVTI5dFpTMVRkR0YwWlRFUE1BMEdBMVVFQ2d3R1FXZHZibVZ6TVE4dwpEUVlEVlFRTERBWkJaMjl1WlhNeE5EQXlCZ05WQkFNTUsyRm5iMjVsY3kxamIyNTBjbTlzYkdWeUxYTmxjblpwClkyVXVZV2R2Ym1WekxYTjVjM1JsYlM1emRtTXhMakFzQmdrcWhraUc5dzBCQ1FFV0gyRm5iMjVsY3kxa2FYTmoKZFhOelFHZHZiMmRzWldkeWIzVndjeTVqYjIwd0hoY05NVGd3TWpFME1EUTBORFEyV2hjTk1qZ3dNakV5TURRMApORFEyV2pDQnFqRUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdNQ2xOdmJXVXRVM1JoZEdVeER6QU5CZ05WCkJBb01Ca0ZuYjI1bGN6RVBNQTBHQTFVRUN3d0dRV2R2Ym1Wek1UUXdNZ1lEVlFRRERDdGhaMjl1WlhNdFkyOXUKZEhKdmJHeGxjaTF6WlhKMmFXTmxMbUZuYjI1bGN5MXplWE4wWlcwdWMzWmpNUzR3TEFZSktvWklodmNOQVFrQgpGaDloWjI5dVpYTXRaR2x6WTNWemMwQm5iMjluYkdWbmNtOTFjSE11WTI5dE1JSUJJakFOQmdrcWhraUc5dzBCCkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXpnVlQ5MGVqeE5ud0NvL09qTUQyNmZVNGRya1NlZndkUWd3aWJpZmEKbDhyazZZMFZ2T0lWMUgrbFJvd2UwNm1XTnVSNUZPWEZBMGZYbHZ4Q0tLWVZRcFNQRUsyWVN5aC9hU25KUUw2cQpvOGVBWVRKQmtPWUxCNUNiekl6aVdlb1FmT1lOOE1sRW44YlhKZGllSmhISDhVbnlqdHlvVGx4emhabVgrcGZ0CmhVZGVhM1Zrek8yMW40K1FFM1JYNWYxMzJGVEZjdXFYT1VBL3BpOGNjQU5HYzN6akxlWkp2QTlvZFBFaEdmN2cKQzhleUE2OFNWY3NoK1BqejBsdzk1QVB2bE12MWptcVVSRldjRVNUTGFRMEZ4NUt3UnlWMHppWm1VdkFBRjJaeApEWmhIVWNvRlBIQXdUbDc1TkFobkhwTWxMTnA1TDd0Y1ZkeVQ4QjJHUnMrc2xRSURBUUFCbzFBd1RqQWRCZ05WCkhRNEVGZ1FVZ3YxblRQYVFKU04zTHFtNWpJalc0eEhtZEcwd0h3WURWUjBqQkJnd0ZvQVVndjFuVFBhUUpTTjMKTHFtNWpJalc0eEhtZEcwd0RBWURWUjBUQkFVd0F3RUIvekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBSEtFQwprdEVqWU5VQ0ErbXlzejRvclc3cFJVdmhCSERWU2dzWTZlRVZSTHpmLzF5SVpFMHU2NTZrcEs2T1Q3TWhKR2xVCkt3R1NTb1VCQnpWZ1VzWmpEbTdQZ2JrNGlZem40TTF4THpiTFFCcjNNYzV6WEhlZlB2YmltaEQ1NWNMenBWRnUKVlFtQm1aVjJOalU1RHVTZFJuZGxjUGFOY2cvdU9jdlpLNEtZMUtDQkEzRW9BUUlrcHpIWDJpVU1veGlSdlpWTgpORXdnRlR0SUdCWW4wSGZML3ZnT3NIOGZWck1Va3VHMnZoR2RlWEJwWmlxL0JaSmJaZU4yckNmMmdhWDFRSXYwCkVLYmN1RnFNOThXVDVaVlpSdFgxWTNSd2V2ZzRteFlKWEN1SDZGRjlXOS9TejI5NEZ5Mk9CS0I4SkFWYUV4OW4KMS9pNmZJZmZHbkhUWFdIc1ZRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    rules:
      - apiGroups:
          - stable.agones.dev
        resources:
          - "gameservers"
        apiVersions:
          - "v1alpha1"
        operations:
          - CREATE
---
# Service account, secret, role and rolebinding for sidecar (agones-sdk) pod
apiVersion: v1
kind: ServiceAccount
metadata:
  name: agones-sdk
secrets:
- name: agones-sdk-secret
---
apiVersion: v1
kind: Secret
metadata:
  name: agones-sdk-secret
  annotations:
    kubernetes.io/service-account.name: agones-sdk
type: kubernetes.io/service-account-token
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: agones-sdk
  namespace: agones-system
rules:
- apiGroups: ["stable.agones.dev"]
  resources: ["gameservers"]
  verbs: ["get", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: agones-sdk-access
  namespace: agones-system
subjects:
- kind: User
  name: system:serviceaccount:default:agones-sdk
  apiGroup: rbac.authorization.k8s.io
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: agones-sdk
---
# Service account, secret, role and rolebinding for agones-controller
apiVersion: v1
kind: ServiceAccount
metadata:
  name: agones-controller
  namespace: agones-system
secrets:
- name: agones-controller-secret
---
apiVersion: v1
kind: Secret
metadata:
  name: agones-controller-secret
  namespace: agones-system
  annotations:
    kubernetes.io/service-account.name: agones-controller
type: kubernetes.io/service-account-token
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: agones-controller
  namespace: agones-system
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["create", "delete", "list", "watch"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["list", "watch"]
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["get"]
- apiGroups: ["stable.agones.dev"]
  resources: ["gameservers"]
  verbs: ["delete", "get", "list", "update", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: agones-controller-access
  namespace: agones-system
subjects:
- kind: User
  name: system:serviceaccount:agones-system:agones-controller
  apiGroup: rbac.authorization.k8s.io
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: agones-controller
